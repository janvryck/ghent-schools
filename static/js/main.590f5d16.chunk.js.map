{"version":3,"sources":["api/index.js","components/School.js","components/User.js","components/Map.js","components/LocationPermission.js","components/App.js","index.js"],"names":["fetchSchoolLocationsJSON","selector","fetch","then","response","json","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","School","point","center","User","callback","geolocationSupported","navigator","useState","position","setPosition","geolocation","watchPosition","coords","latitude","longitude","lat","lng","GHENT_CENTER","CONTAINER_STYLE","width","height","Map","locationEnabled","primarySchools","setPrimarySchools","secondarySchools","setSecondarySchools","useEffect","records","fetchSecondarySchools","googleMapsApiKey","mapContainerStyle","zoom","map","s","geometry","coordinates","idx","style","cursor","backgroundColor","boxShadow","borderRadius","touchAction","left","bottom","padding","fontSize","lineHeight","LocationPermission","enabled","setEnabled","onClick","className","App","setLocationEnabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.590f5d16.chunk.js","sourcesContent":["const PRIMARY_SCHOOLS_DATASET = 'locaties-basisscholen-gent';\r\nconst SECONDARY_SCHOOLS_DATASET = 'locaties-secundaire-scholen-gent';\r\n\r\nconst fetchSchoolLocationsJSON = (selector) => fetch(`https://data.stad.gent/api/records/1.0/search/?dataset=${selector}&q=&rows=1000`)\r\n    .then(response => response.json())\r\n\r\nexport const fetchPrimarySchools = (callback) => {\r\n    fetchSchoolLocationsJSON(PRIMARY_SCHOOLS_DATASET)\r\n        .then(({ records }) => callback(records));\r\n}\r\n\r\nexport const fetchSecondarySchools = (callback) => {\r\n    fetchSchoolLocationsJSON(SECONDARY_SCHOOLS_DATASET)\r\n        .then(({ records }) => callback(records));\r\n}\r\n\r\n","import { Circle } from '@react-google-maps/api';\r\n\r\nconst radiusInMeters = 200;\r\nconst options = {\r\n    strokeColor: '#138CBF',\r\n    strokeOpacity: 0.8,\r\n    strokeWeight: 2,\r\n    fillColor: '#6ED8FF',\r\n    fillOpacity: 0.35,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    visible: true,\r\n    radius: radiusInMeters,\r\n    zIndex: 1\r\n};\r\n\r\nconst School = ({point}) => {\r\n    return <Circle\r\n        center={point}\r\n        options={options} />;\r\n}\r\n\r\nexport default School;","import { useState } from 'react';\r\nimport { Marker } from '@react-google-maps/api';\r\n\r\nconst watchUserLocation = (callback) => {\r\n    navigator.geolocation.watchPosition(({coords: {latitude, longitude}}) => {\r\n        callback({\r\n            lat: latitude,\r\n            lng: longitude\r\n        });\r\n    });\r\n}\r\n\r\nconst User = () => {\r\n    const geolocationSupported = \"geolocation\" in navigator;\r\n    const [position, setPosition] = useState();\r\n\r\n    if (geolocationSupported) {\r\n        watchUserLocation(setPosition);\r\n    }\r\n\r\n    return geolocationSupported && position\r\n        ? <Marker position={position} />\r\n        : <></>;\r\n}\r\n\r\nexport default User;","import { useState, useEffect } from 'react';\r\nimport { LoadScript, GoogleMap } from '@react-google-maps/api';\r\nimport { fetchPrimarySchools, fetchSecondarySchools } from '../api'\r\nimport School from './School';\r\nimport User from './User';\r\n\r\nconst API_KEY = 'AIzaSyDptcJHsG8CNtBplM4mL-SJPeOGdZMAS_Y';\r\nconst GHENT_CENTER = {\r\n    lat: 51.049,\r\n    lng: 3.733\r\n};\r\nconst CONTAINER_STYLE = {\r\n    width: '100%',\r\n    height: '100vh'\r\n};\r\n\r\nconst Map = ({locationEnabled}) => {\r\n    const [primarySchools, setPrimarySchools] = useState([]);\r\n    const [secondarySchools, setSecondarySchools] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPrimarySchools(setPrimarySchools);\r\n        fetchSecondarySchools(setSecondarySchools);\r\n    }, []);\r\n\r\n    return (<LoadScript googleMapsApiKey={API_KEY}>\r\n        <GoogleMap\r\n            mapContainerStyle={CONTAINER_STYLE}\r\n            center={GHENT_CENTER}\r\n            zoom={13}>\r\n            {\r\n                primarySchools\r\n                    .map(s => s.geometry)\r\n                    .map(({coordinates}) => {\r\n                        return {\r\n                            lat: coordinates[1],\r\n                            lng: coordinates[0]\r\n                        }\r\n                    })\r\n                    .map((point, idx) => <School key={idx} point={point} />)\r\n            }\r\n            {\r\n                secondarySchools\r\n                    .map(s => s.geometry)\r\n                    .map(({coordinates}) => {\r\n                        return {\r\n                            lat: coordinates[1],\r\n                            lng: coordinates[0]\r\n                        }\r\n                    })\r\n                    .map((point, idx) => <School key={idx} point={point} />)\r\n            }\r\n            {locationEnabled ? <User /> : <></>}\r\n        </GoogleMap>\r\n    </LoadScript>)\r\n}\r\n\r\nexport default Map;","const style = {\r\n    cursor: 'pointer',\r\n    backgroundColor: 'rgb(255, 255, 255)',\r\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px 1px 4px -1px',\r\n    borderRadius: '2px',\r\n    touchAction: 'none',\r\n    position: 'absolute',\r\n    left: '20px',\r\n    bottom: '40px',\r\n    padding: '0 20px',\r\n    height: '40px',\r\n    fontSize: '18px',\r\n    lineHeight: '40px'\r\n};\r\n\r\nconst LocationPermission = ({enabled, setEnabled}) => {\r\n    const enable = () => setEnabled(true);\r\n    const disable = () => setEnabled(false);\r\n    return enabled\r\n        ? <div style={style} onClick={disable}><i className=\"fas fa-toggle-on\"></i> Disable location</div>\r\n        : <div style={style} onClick={enable}><i className=\"fas fa-toggle-off\"></i> Enable location</div>;\r\n}\r\n\r\nexport default LocationPermission;","import { useState } from 'react';\r\nimport Map from './Map';\r\nimport LocationPermission from './LocationPermission';\r\n\r\nconst App = () => {\r\n    const [locationEnabled, setLocationEnabled] = useState(false);\r\n    return <>\r\n        <Map locationEnabled={locationEnabled} />\r\n        <LocationPermission enabled={locationEnabled} setEnabled={setLocationEnabled} />\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}